{%- style -%}
  #section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    #section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- capture columns_mobile -%}
grid-cols-{{ section.settings.columns_mobile }}
{%- endcapture -%}

{%- capture columns_desktop -%}
md:grid-cols-{{ section.settings.columns_desktop }}
{%- endcapture -%}

<section id="section-{{ section.id }}-padding" class="w-full overflow-hidden px-5">
  <product-recommendations
    class="product-recommendations flex flex-col gap-4"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ section.settings.products_to_show }}"
  >
    {% if recommendations.performed and recommendations.products_count > 0 %}
      <h1 class="text-2xl md:text-5xl">
        {{ section.settings.heading | escape }}
      </h1>
    {% endif %}
    <div>
      <div
        id="grid-product-{{ section.id }}"
        class="grid {{ columns_mobile }} {{ columns_desktop }} gap-x-2 gap-y-8 "
        role="list"
      >
        {% if recommendations.performed and recommendations.products_count > 0 %}
          {% for recommendation in recommendations.products %}
            <div
              id="card-product-{{ section.id }}-{{ forloop.index }}"
              class="grid__item"
            >
              {% render 'card-product',
                card_product: recommendation,
                section_id: section.id,
                show_secondary_image: true,
                image_ratio: section.settings.image_ratio
              %}
            </div>
          {% endfor %}
        {% endif %}
      </div>
    </div>
  </product-recommendations>
</section>

{% javascript %}
  class ProductRecommendations extends HTMLElement {
    constructor() {
      super();

      const handleIntersection = (entries, observer) => {
        if (!entries[0].isIntersecting) return;
        observer.unobserve(this);

        fetch(this.dataset.url)
          .then((response) => response.text())
          .then((text) => {
            const html = document.createElement('div');
            html.innerHTML = text;
            const recommendations = html.querySelector('product-recommendations');

            if (recommendations && recommendations.innerHTML.trim().length) {
              this.innerHTML = recommendations.innerHTML;
            }

            if (html.querySelector('.grid__item')) {
              this.classList.add('product-recommendations--loaded');
            }
          })
          .catch((e) => {
            console.error(e);
          });
      };

      new IntersectionObserver(handleIntersection.bind(this), { rootMargin: '0px 0px 200px 0px' }).observe(this);
    }
  }

  customElements.define('product-recommendations', ProductRecommendations);
{% endjavascript %}

{% schema %}
{
  "name": "Product Recommendations",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "default": "You may also like",
      "label": "Header"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 10,
      "step": 1,
      "default": 4,
      "label": "Products to show"
    },
    {
      "type": "checkbox",
      "id": "enable_carousel",
      "default": false,
      "label": "Enable carousel",
      "info": "carousel style is for both desktop and mobile"
    },
    {
      "type": "select",
      "id": "columns_desktop",
      "options": [
        {
          "value": "1",
          "label": "1 column"
        },
        {
          "value": "2",
          "label": "2 columns"
        },
        {
          "value": "3",
          "label": "3 columns"
        },
        {
          "value": "4",
          "label": "4 columns"
        },
        {
          "value": "5",
          "label": "5 columns"
        }
      ],
      "default": "4",
      "label": "Desktop columns"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "1 column"
        },
        {
          "value": "2",
          "label": "2 columns"
        }
      ],
      "default": "2",
      "label": "Mobile columns"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "portrait",
          "label": "Portrait"
        },
        {
          "value": "square",
          "label": "Square"
        }
      ],
      "default": "portrait",
      "label": "Image ratio"
    },
    {
      "type": "header",
      "content": "Section Padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ]
}
{% endschema %}
